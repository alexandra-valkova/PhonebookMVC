@using PagedList.Mvc
@using PhonebookMVC.ViewModels.Contacts
@model ContactsListVM

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css"/>

@{
    ViewBag.Title = "Contacts";
}

<h2>Contacts</h2>

<p>
    @Html.ActionLink("Create New", "CreateEdit")
</p>

@using (Html.BeginForm("Index", "Contacts", FormMethod.Get))
{
    <p>
        Search: @Html.TextBox("SearchString", Model.SearchString as string)
        <input type="submit" value="Filter" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @{
                //if (Model.SortOrder != null && Model.SortOrder != ContactSorting.FirstNameAsc)
                //{
                //    Model.RouteDictionary.Remove("SortOrder");
                //}

                //else
                //{
                //    Model.RouteDictionary["SortOrder"] = ContactSorting.FirstNameDesc;
                //}

                Model.RouteDictionary["SortOrder"] = Model.SortOrder == null || Model.SortOrder != ContactSorting.FirstNameAsc ? ContactSorting.FirstNameAsc : ContactSorting.FirstNameDesc;
                @Html.ActionLink("First Name", "Index", Model.RouteDictionary)
            }
        </th>
        <th>
            @{
                Model.RouteDictionary["SortOrder"] = Model.SortOrder != ContactSorting.LastNameAsc ? ContactSorting.LastNameAsc : ContactSorting.LastNameDesc;
                @Html.ActionLink("Last Name", "Index", Model.RouteDictionary)
            }
        </th>
        <th>
            @{
                Model.RouteDictionary["SortOrder"] = Model.SortOrder != ContactSorting.EmailAsc ? ContactSorting.EmailAsc : ContactSorting.EmailDesc;
                @Html.ActionLink("Email", "Index", Model.RouteDictionary)
            }
        </th>
        <th>
            Groups
        </th>
        <th>
            Phones
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.PagedContacts)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @foreach (var groupItem in item.Groups)
                {
                    @Html.DisplayFor(Item => groupItem.Name)
                    @Html.Raw("</br>")
                }
            </td>
            <td>
                @Html.ActionLink("Phones", "Index", "Phones", new { id = item.ID }, null)
            </td>
            <td>
                @Html.ActionLink("Edit", "CreateEdit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>

<br />
Page @(Model.PagedContacts.PageCount < Model.PagedContacts.PageNumber ? 0 : Model.PagedContacts.PageNumber) of @Model.PagedContacts.PageCount

@Html.PagedListPager(Model.PagedContacts, page => Url.Action("Index", new { page, searchString = Model.SearchString, sortOrder = Model.SortOrder }))